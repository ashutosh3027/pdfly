# This action assumes that there is a REL-commit which already has a
# Markdown-formatted git tag. Hence the CHANGELOG is already adjusted
# and it's decided what should be in the release.
# This action only ensures the release is done with the proper contents
# and that it's announced with a Github release.
name: Publish Python Package to PyPI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_publish:
    name: Publish a new version
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Prepare variables
        id: prepare_variables
        run: |
          git fetch --tags --force
          latest_tag=0.2.14
          echo "latest_tag=0.2.14" >> "$GITHUB_ENV"
          echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"
          git --no-pager tag -l ${latest_tag} --format='%(contents:body)' >> tmpCHANGELOG.txt
          echo "foo" >> tmpCHANGELOG.txt
          echo "bar" >> tmpCHANGELOG.txt
      - name: Create GitHub Release ðŸš€
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.latest_tag }}
          name: Version ${{ env.latest_tag }}, ${{ env.date }}
          draft: false
          prerelease: false
          body_path: tmpCHANGELOG.txt
